# .github/workflows/dryrun-staging.yml
##
# Dry-run deploy to a temporary directory in the staging environment with Trellis
#
# To use this workflow, you must create or update a deploy hook in Trellis:
#
# # trellis/deploy-hooks/build-after.yml
# ---
# - name: "Delete the deploy if this is a dry-run"
#   when: dry_run|default(False)
#   ansible.builtin.file:
#     state: absent
#     path: "{{ deploy_helper.new_release_path }}"

# - name: "Stop here if this is a dry-run"
#   when: dry_run|default(False)
#   meta: end_play
#
##

name: ðŸ§ª Dry-run to staging
run-name: dry-run-to-staging

on:
  workflow_dispatch:
  pull_request:
    branches: [staging]

env:
  environment: staging

jobs:
  dryrun-staging:
    runs-on: ubuntu-latest
    steps:

      # Checkout the repo
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      # Deploy site to staging
      - uses: ./.github/actions/trellis-cli
        name: Dry-run deploy to staging
        if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch' || github.repository != 'MWDelaney/trellis-template'
        with:
          extra-vars: '"dry_run=true project_root=/tmp/trellis"'
          environment: ${{ env.environment }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          trellis_site_slug: ${{ secrets.TRELLIS_SITE_SLUG }}
          trellis_deploy_ssh_private_key: ${{ secrets.TRELLIS_DEPLOY_SSH_PRIVATE_KEY }}
          trellis_deploy_ssh_known_hosts: ${{ secrets.TRELLIS_DEPLOY_SSH_KNOWN_HOSTS }}
          ansible_vault_password: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          dry_run: true
